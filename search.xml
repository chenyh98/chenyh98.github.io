<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客搭建过程</title>
      <link href="/2021/07/13/bo-ke-da-jian-guo-cheng/"/>
      <url>/2021/07/13/bo-ke-da-jian-guo-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>大学各种学习资料、学习笔记太杂太乱，我是总要整理的。思来想去，放在一个博客里，随时都可以查看，是最方便的，也可以强迫自己维护这个博客（说来还是闲得慌）。</p><p>本站使用Hexo作为博客框架，托管在GitHub上，网址是：<a href="https://blog.chenyh.xyz/">https://blog.chenyh.xyz</a></p><p>下面将介绍搭建过程和常用命令。</p><p>搭建过程总览：</p><ul><li>安装<ul><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li></ul></li><li>配置GitHub<ul><li>创建仓库</li><li>绑定域名</li><li>推送设置</li></ul></li><li>配置Hexo</li><li>配置主题</li><li>配置图床</li></ul><p>常用命令：</p><ul><li>git</li><li>hexo</li></ul><h1 id="二、搭建过程"><a href="#二、搭建过程" class="headerlink" title="二、搭建过程"></a>二、搭建过程</h1><h2 id="2-1-安装Git"><a href="#2-1-安装Git" class="headerlink" title="2.1 安装Git"></a>2.1 安装Git</h2><p>官网：<a href="https://git-scm.com/download/win">Git - Downloading Package</a></p><p>在Git Bash中，设置user.name和user.email配置信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"你的GitHub用户名"</span><span class="token function">git</span> config --global user.email <span class="token string">"你的GitHub注册邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>生成ssh密钥文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"你的GitHub注册邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，默认在<code>C:\Users\Administrator\.ssh\id_rsa.pub</code>，将内容全部复制</p><p>打开<a href="https://github.com/settings/keys">GitHub_Settings_keys</a> 页面，新建New SSH key</p><p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>在Git Bash中检测GitHub公钥设置是否成功，输入 <code>ssh git@github.com</code> </p><h2 id="2-2-安装Node-js"><a href="#2-2-安装Node-js" class="headerlink" title="2.2 安装Node.js"></a>2.2 安装Node.js</h2><p>官网：<a href="https://nodejs.org/en/download/">Download | Node.js</a></p><p>安装后，检测Node.js是否安装成功，在命令行中输入 node -v</p><p>检测npm是否安装成功，在命令行中输入npm -v</p><h2 id="2-3-安装Hexo"><a href="#2-3-安装Hexo" class="headerlink" title="2.3 安装Hexo"></a>2.3 安装Hexo</h2><p>在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。</p><p>创建好后，将命令行定位到Blog文件夹中</p><p>使用npm命令安装Hexo，输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成后，初始化我们的博客，输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里将在Blog文件夹中生成一个blog文件夹</p><p>为了检测我们的网站雏形，进入blog文件夹，分别按顺序输入以下三条命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token builtin class-name">test</span>hexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完成后，打开地址<a href="https://localhost:4000/">https://localhost:4000</a></p><h2 id="2-4-配置"><a href="#2-4-配置" class="headerlink" title="2.4 配置"></a>2.4 配置</h2><h3 id="2-4-1-创建仓库"><a href="#2-4-1-创建仓库" class="headerlink" title="2.4.1 创建仓库"></a>2.4.1 创建仓库</h3><p>点击GitHub中的New repository创建新仓库，仓库名应该为：<code>用户名.github.io</code>这个用户名使用你的GitHub帐号名称代替，这是固定写法</p><h3 id="2-4-2-推送设置"><a href="#2-4-2-推送设置" class="headerlink" title="2.4.2 推送设置"></a>2.4.2 推送设置</h3><p>打开站点的配置文件_config.yml，翻到最后修改为：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># Deployment</span><span class="token comment">## Docs: https://hexo.io/docs/one-command-deployment</span>deploy:  type: <span class="token function">git</span>  repository: git@github.com:你的用户名/你的用户名.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存站点配置文件</p><p>最后安装Git部署插件，输入命令：</p><pre class="line-numbers language-basemake" data-language="basemake"><code class="language-basemake">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时，我们分别输入三条命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clhexo g hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写</p><p>打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即<code>你的用户名.github.io</code></p><p>你就会发现你的博客已经上线了，可以在网络上被访问了</p><h3 id="2-4-3-域名设置"><a href="#2-4-3-域名设置" class="headerlink" title="2.4.3 域名设置"></a>2.4.3 域名设置</h3><p>虽然在Internet上可以访问我们的网站，但是网址是GitHub提供的<code>你的用户名.github.io</code>，而我们想使用我们自己的个性化域名，这就需要绑定我们自己的域名</p><p>绑定域名需要在 域名解析服务商和 github两边都进行操作。</p><ol><li>在域名解析服务商进行个人域名解析，将域名绑定到个人 <code>github pages</code>。</li><li>同时在 <code>github pages</code> 需要配置 <code>CNAME</code> 文件重定向到你的域名。</li></ol><h4 id="域名解析配置"><a href="#域名解析配置" class="headerlink" title="域名解析配置"></a>域名解析配置</h4><p>首先找到域名管理，选择域名解析功能。在<code>记录类型</code>中，我们选择 <code>A记录</code> 或者 <code>CNAME</code> 就可以了</p><ol><li><code>A记录</code> 类型 <code>记录值</code>填写 <code>IP</code> 值，两种选择：</li></ol><pre class="line-numbers language-none"><code class="language-none">&gt; 你的 `github.io` 的 `IP` 值&gt; 在官方提供的两个 `IP` 中选择 `192.30.252.153`、`192.30.252.154`<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="2"><li> <code>CNAME</code>类型，请选好<code>主机记录</code>，按<code>主机记录</code>类型填写记录值。推荐选择的 <code>@</code> ，那么<code>记录值</code>就按各位github名填写<code>your_name.github.io</code>就好了。</li></ol><h4 id="github-pages"><a href="#github-pages" class="headerlink" title="github pages"></a>github pages</h4><p>（1）在<code>github</code>的<code>github pages</code>的仓库根目录里加上<code>CNAME</code>文件，里面写上个人域名即可</p><pre class="line-numbers language-none"><code class="language-none">blog.chenyh.xyz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）或者直接在<code>github.io</code>仓库的<code>Settings</code>的<code>GitHub Pages</code>项直接设置<code>Custom domain</code>,<code>github</code>会自动添加<code>CNAME</code>文件</p><h3 id="2-4-4-Hexo设置"><a href="#2-4-4-Hexo设置" class="headerlink" title="2.4.4 Hexo设置"></a>2.4.4 Hexo设置</h3><pre class="line-numbers language-none"><code class="language-none"># Sitetitle: chenyh98subtitle: ''description: ''keywords:author: cyhlanguage: zh-CNtimezone: Asia/Shanghai# URL## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'url: http://chenyh98.github.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-5-主题设置"><a href="#2-4-5-主题设置" class="headerlink" title="2.4.5 主题设置"></a>2.4.5 主题设置</h3><p>主题传送门：<a href="https://hexo.io/themes/">Themes</a> 我自己使用的是<a href="https://github.com/blinkfox/hexo-theme-matery">Matery</a>主题，可以在blog目录中的themes文件夹中查看你自己主题是什么。现在把默认主题更改成Matery主题，在blog目录中打开命令行输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git themes/Matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是将Matery主题下载到blog目录的themes主题下的Matery文件夹中。打开站点的_config.yml配置文件，修改主题<code>theme</code>为Matery</p><h3 id="2-4-6-图床设置"><a href="#2-4-6-图床设置" class="headerlink" title="2.4.6 图床设置"></a>2.4.6 图床设置</h3><h1 id="三、参考"><a href="#三、参考" class="headerlink" title="三、参考"></a>三、参考</h1><ul><li><a href="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo 搭建个人网站详细教程</a></li><li><a href="https://juejin.cn/post/6844903887732736007">hexo在GitHub上搭建个人博客（详细教程）</a></li><li><a href="https://segmentfault.com/a/1190000011203711">个人博客记 —— Github pages 绑定个人域名</a></li><li><a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chenyh98</title>
      <link href="/2021/07/12/chenyh98/"/>
      <url>/2021/07/12/chenyh98/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/12/hello-world/"/>
      <url>/2021/07/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
